MODULE Multiplier (     (*NW 5.10.2014*)
  IN clk, run, u: BIT;
  OUT stall: BIT;
  IN x, y: WORD;   (*32 bit*)
  OUT z: [64] BIT);

  TYPE MULT18X18 := MODULE (OUT P: [36] BIT; IN A, B: [18] BIT) ^;

  VAR M0, M1, M2, M3: MULT18X18;
    p0, p1, p2, p3: [36] BIT;
  REG S: BIT;   (*state*)
    z0: [16] BIT; z1, z2: [48] BIT;
BEGIN 
  M0(p0, {0'2, x[15:0]}, {0'2, y[15:0]});
  M1(p1, {u&x.31, u&x.31, x[31:16]}, {0'2, y[15:0]});
  M2(p2, {0'2, x[15:0]}, {u&y.31, u&y.31, y[31:16]});
  M3(p3, {u&x.31, u&x.1, x[31:16]}, {u&y.31, u&y.31, y[31:16]});
  stall := run & ~S;
  z := {z1 + z2, z0};
  S := stall;
  z0 := p0[15:0];
  z1 := {0'32, p0[31:16]} + {(u&p1.31)!16, p1[31:0]};
  z2 := {u&p2.31!16, p2[31:0]} + {p3[31:0], 0'16}
END Multiplier.
