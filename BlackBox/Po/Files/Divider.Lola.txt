MODULE Divider(
  IN clk, run: BIT;
  OUT stall: BIT;
  IN x, y: WORD;  (*32 bit, y > 0*)
  OUT quot, rem: WORD);
  REG (clk) S: [5] BIT;
    R, Q: WORD;
  VAR pos: BIT;
    x0, r0, r1, r2, q0, q1, d: WORD;
BEGIN stall := run & ~(S = 31);
  pos := ~x.31;
  x0 := pos -> x : ~x + y;    (* -x + (y-1) *)
  r0 := (S = 0) -> 0'32 : R;
  d := r1 - y;
  r1 := {r0[30:0], q0.31};
  r2 := d.31 -> r1 : d;
  q0 := (S = 0) -> x0 : Q;
  q1 := {q0[30:0], ~d.31};
  quot := pos -> q1 : -q1;
  rem := pos -> r2 : ~r2 + y;   (*(y-1) - r2*)
  R := r2;
  Q := q1;
  S := run -> S+1 : 0
END Divider.
